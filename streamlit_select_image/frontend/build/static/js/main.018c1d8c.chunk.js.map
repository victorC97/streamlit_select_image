{"version":3,"sources":["SelectImage.tsx","index.tsx"],"names":["SelectImage","state","back","options","props","args","images","value","default","handleChange","event","setState","prev","target","Streamlit","setComponentValue","render","Box","sx","minHeight","marginTop","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","autoWidth","maxHeight","maxWidth","map","image","option","MenuItem","key","paddingLeft","alt","src","height","width","justifyContent","i","this","length","push","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"wSASMA,EAAW,iKAoEd,OApEc,oCAEfC,MAAQ,CAAEC,KAAM,GAAIC,QAAS,EAAKC,MAAMC,KAAKF,QAASG,OAAQ,EAAKF,MAAMC,KAAKC,OAAQC,MAAO,EAAKH,MAAMC,KAAKG,SAAQ,EAYrHC,aAAe,SAACC,GACd,EAAKC,UAAS,SAACC,EAAMX,GAAK,MAAM,CAC9BM,MAAOG,EAAMG,OAAON,UAEpB,kBAAMO,IAAUC,kBAAkB,EAAKd,MAAMM,WAEhD,EAEDS,OAAS,WACP,MAAiC,KAA7B,EAAKZ,MAAMC,KAAY,MAEvB,kBAACY,EAAA,EAAG,CAACC,GAAI,CAACC,UAAW,IAAKC,UAAW,IACnC,kBAACC,EAAA,EAAW,CAACC,WAAS,GACpB,kBAACC,EAAA,EAAU,CAACC,GAAG,sBAAsB,EAAKpB,MAAMC,KAAY,OAC5D,kBAACoB,EAAA,EAAM,CACLC,QAAQ,qBACRF,GAAG,eACHjB,MAAO,EAAKN,MAAMM,MAClBoB,MAAM,QACNC,SAAU,EAAKnB,aACfoB,WAAS,EACTX,GAAI,CAAEY,UAAW,IAAKC,SAAU,MAE/B,EAAK9B,MAAMC,KAAK8B,KAAI,gBAAGC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAM,OACnC,kBAACC,EAAA,EAAQ,CACP5B,MAAO2B,EACPE,IAAKF,EACLhB,GAAI,CAACmB,YAAa,EAAGP,UAAW,IAAKC,SAAU,MAE/C,yBAAKO,IAAKJ,EAAQK,IAAKN,EAAOO,OAAQ,OAAQC,MAAO,gBAS/D,kBAACxB,EAAA,EAAG,CAACC,GAAI,CAACC,UAAW,IAAKC,UAAW,IACnC,kBAACC,EAAA,EAAW,CAACC,WAAS,GACpB,kBAACG,EAAA,EAAM,CACLC,QAAQ,qBACRF,GAAG,eACHjB,MAAO,EAAKN,MAAMM,MAClBqB,SAAU,EAAKnB,cAEd,EAAKR,MAAMC,KAAK8B,KAAI,gBAAGC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAM,OACnC,kBAACC,EAAA,EAAQ,CAACjB,GAAI,CAACwB,eAAgB,YAAanC,MAAO2B,GAAQ,yBAAKI,IAAKJ,EAAQK,IAAKN,EAAOO,OAAQ,QAASC,MAAO,kBAO9H,EAxDA,OAwDA,8CAhED,WAEE,IAFmB,IAAD,OACZvC,EAAc,GACXyC,EAAE,EAAGA,EAAIC,KAAK3C,MAAME,QAAQ0C,OAAQF,IAC3CzC,EAAK4C,KAAK,CAACZ,OAAQU,KAAK3C,MAAME,QAAQwC,GAAIV,MAAOW,KAAK3C,MAAMK,OAAOqC,KAErEC,KAAKjC,UAAS,SAACC,EAAMX,GAAK,MAAM,CAC9BC,KAAMA,MACJ,kBAAMY,IAAUC,kBAAkB,EAAKd,MAAMM,cAClD,EAZc,CAASwC,KAwEXC,cAAwBhD,GC5EvCiD,IAASjC,OACP,kBAAC,IAAMkC,WAAU,KACf,kBAAC,EAAW,OAEdC,SAASC,eAAe,W","file":"static/js/main.018c1d8c.chunk.js","sourcesContent":["import {\n  Streamlit, StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React from \"react\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\"\nimport { Box, CardMedia, FormControl, InputLabel } from \"@mui/material\"\n\nclass SelectImage extends StreamlitComponentBase {\n\n  state = { back: [], options: this.props.args.options, images: this.props.args.images, value: this.props.args.default}\n\n  componentDidMount() {\n    const back: any[] = [];\n    for (let i=0; i < this.state.options.length; i++) {\n      back.push({option: this.state.options[i], image: this.state.images[i]});\n    }\n    this.setState((prev, state) => ({\n      back: back,\n    }), () => Streamlit.setComponentValue(this.state.value))\n  }\n\n  handleChange = (event: SelectChangeEvent) => {\n    this.setState((prev, state) => ({\n      value: event.target.value\n    }),\n      () => Streamlit.setComponentValue(this.state.value)\n    )\n  }\n\n  render = () => {\n    if (this.props.args[\"label\"] !== \"\") {\n      return (\n        <Box sx={{minHeight: 200, marginTop: 2}}>\n          <FormControl fullWidth>\n            <InputLabel id=\"image-select-label\">{this.props.args[\"label\"]}</InputLabel>\n            <Select\n              labelId=\"image-select-label\"\n              id=\"image-select\"\n              value={this.state.value}\n              label=\"Image\"\n              onChange={this.handleChange}\n              autoWidth\n              sx={{ maxHeight: 150, maxWidth: 150}}\n            >\n              {this.state.back.map(({ image, option }) => (\n                <MenuItem\n                  value={option}\n                  key={option}\n                  sx={{paddingLeft: 0, maxHeight: 150, maxWidth: 150}}\n                >\n                  <img alt={option} src={image} height={\"100%\"} width={\"100%\"}/>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      );\n    } else {\n      return (\n        <Box sx={{minHeight: 200, marginTop: 2}}>\n          <FormControl fullWidth>\n            <Select\n              labelId=\"image-select-label\"\n              id=\"image-select\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            >\n              {this.state.back.map(({ image, option }) => (\n                <MenuItem sx={{justifyContent: \"flex-end\"}} value={option}><img alt={option} src={image} height={\"100px\"} width={\"100px\"}/></MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      );\n    }\n  }\n\n}\n\nexport default withStreamlitConnection(SelectImage)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SelectImage from \"./SelectImage\"\ndeclare module \"*.png\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <SelectImage />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}